<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--加载属性文件到Spring上下文中
        ignore-unresolvable : 属性不存在是否报错
        ignore-resource-not-found : 文件不存在是否报错

    -->
    <context:property-placeholder location="classpath:config/jdbc.properties"  ignore-unresolvable="true"></context:property-placeholder>
    <!--配置druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="validationQuery" value="true"></property>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="2" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="50" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
    </bean>

    <!--Mybatis与Spring整合-->
    <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--给dataSource属性赋值 上述创建的DruidDataSource的bean对象-->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置Mybatis的核心配置文件路径-->
        <property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
        <!--映射当前Mybatis的mapper文件-->
        <property name="mapperLocations" value="classpath:com/javasm/mapper/*.xml"></property>
    </bean>

    <!--dao接口托管给Spring-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sessionFactoryBean"></property>
        <property name="basePackage" value="com.javasm.dao"></property>
    </bean>


    <!--Spring托管Mybatis事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源映射-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--事务管理器通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--通知属性配置-->
        <tx:attributes>
            <!--需要通知的方法[事务通知范围]-->
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="upd*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!--aop切面配置-->
    <aop:config>
        <!--切面点-->
        <aop:pointcut id="pc" expression="execution(* com.javasm.service.impl.*.*(..))"></aop:pointcut>
        <!--通知按照切点和事务范围来执行事务-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"></aop:advisor>
    </aop:config>
</beans>