<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--当Mybatis通过getMapper来查找接口实现时,会根据类的全名来Mybatis上下文中的Mapper中查找对应的namespace.
根据对应的类被调用的方法名来获取id是否存在.-->
<mapper namespace="com.javasm.dao.DepDao">
    <!--结果集映射,可以很方便的将SQL查询的字段名与实体类的属性关联
            id: 当前结果集的唯一标志.当前xml中唯一
            type : 当前结果集对应的实体类
        -->
    <resultMap id="depMap" type="Dep">
        <!-- id 标签是设置当前查询结果字段中的主键的
            column : 查询结果集中字段的名称
            property : 实体类对应的成员变量名
        -->
        <id column="depId" property="depId"></id>
        <!--
            result是定义非主键的字段
        -->
        <result column="depName" property="depName"></result>
    </resultMap>

    <resultMap id="dep_emp_map" type="Dep" extends="depMap">
        <collection property="empList" ofType="com.javasm.entity.Emp" resultMap="com.javasm.dao.EmpDao.empMap">
        </collection>
    </resultMap>

    <sql id="dep_column">
        depId ,depName
    </sql>

    <sql id="dep_emp_column">
        e.empId,e.empName,e.empPwd,e.empSex,e.enterTime,d.depId,d.depName
    </sql>

    <select id="getDep" resultMap="depMap">
        select <include refid="dep_column"></include> from dep where depId = #{depId}
    </select>

    <select id="getDepEmps" resultMap="dep_emp_map">
        select <include refid="dep_emp_column"></include> from dep d,emp e where e.depId = d.depId and d.depId = #{depId}
    </select>
</mapper>